{----------------------------------------------------------------------------------
 - List Comprehension Questions
 -
 - Write a list comprehension using the form [ _______ | x <- [1 .. 10] _______ ]
 ---------------------------------------------------------------------------------}

-- [61, 62, 63, 64, 65, 66, 67, 68, 69, 70]
lc1 = [60 + x | x <- [1..10]]

-- [61,63,65,67,69]
lc2 = [60 + x | x <- [1..10], odd x]

-- [65]
lc3 = [60 + x | x <- [1..10], x == 5]

-- [[1],[3],[5],[7],[9]]
lc4 = [[x] | x <- [1..10], odd x]

-- [(200,300),(400,500),(600,700),(800,900),(1000,1100)]
lc5 = [(100 * x, (100 * (x+1))) | x <- [1..10], even x]

-- [[4],[4,5],[4,5,6],[4,5,6,7],[4,5,6,7,8]]
lc6 = [[4..x] | x <- [1..10], x < 8, x >= 4]

-- [[400],[400,500],[400,500,600],[400,500,600,700],[400,500,600,700,800]]
lc7 = [[100 * y | y <- [4..x] | x <- [1..10], x < 9, x >= 4]

-- [(3,True),(6,False),(9,True),(12,False),(15,True),(18,False)]
lc8 = [(3,True),(6,False),(9,True),(12,False),(15,True),(18,False)]

{----------------------------------------------------------------------------------
 - Type Questions
 - 
 - What are the types and values of the following expressions?
 ---------------------------------------------------------------------------------}

foo :: [Int] -> Bool
foo xs = length [x | x <- xs, odd x] > 2

bar :: [[Int]] -> [[Int]]
bar []    = [[5]]
bar [[x]] = [[3]]
bar xs    = [head xs]

t1 = (1, True)
-- (1, True)
-- (Int, Bool)

t2 = [x | x <- "abcd"]
-- "abcd"
-- [Char]

t3 = fst ( [a | (a, b) <- [('1', "b"), ('2', "c")]], 5)
-- "12"
-- [[Char]]

t4 = 3: [5,7] ++ []
-- [3,5,7]
-- [Int]

t5 = foo [1, 5, 14]
-- False
-- Bool

t6 = [[1,3], [5]] ++ [[7]]
-- [1,3],[5],[7]]
-- [[Int]]

t7 = ("c", ( [x | x <- ['1', '3', '5']] : [], bar [[1,5], [3]]))
-- ("c",(["135"],[[1,5]]))
-- ([Char], ([[Char]], [[Int]]))

t8 = 20
-- 20
-- Int

t9 = "20" ++ "40"
-- "2040"
-- [Char]

t10 = 20 + 40
-- 60
-- Int

t11 = concat [['1', '3'], ['5']]
-- "135"
-- [Char]

t12 = fst (not (foo []), "Josiah")
-- True
-- Bool
